{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","components/utils.ts","index.tsx"],"names":["TodoList","todos","setIsHide","selectedTodo","setSelectedTodo","setIsLoading","className","map","todo","id","completed","title","type","onClick","cn","TodoFilter","filterBy","query","setFilterBy","setQuery","value","onChange","e","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","isLoading","useState","user","setUser","useEffect","loadUser","a","userId","oneUser","href","email","name","App","setTodos","isHide","loadTodos","data","filteredTodos","filter","toLowerCase","includes","v","filterTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89402f19.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo;\n  setIsHide: (bool: boolean) => void;\n  setSelectedTodo: (todo: Todo) => void,\n  setIsLoading: (bool: boolean) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setIsHide,\n  selectedTodo,\n  setSelectedTodo,\n  setIsLoading,\n}: Props) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          return (\n            <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed\n                  && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                {todo.completed !== true\n                  ? <p className=\"has-text-danger\">{todo.title}</p>\n                  : <p className=\"has-text-success\">{todo.title}</p>}\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    if (!todo) {\n                      return;\n                    }\n\n                    setIsLoading(true);\n                    setSelectedTodo(todo);\n                    setIsHide(false);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('far', {\n                      'fa-eye': todo.id !== selectedTodo?.id,\n                      'fa-eye-slash': todo.id === selectedTodo?.id,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Filter } from '../utils';\n\ntype Props = {\n  filterBy: Filter;\n  query: string,\n  setFilterBy: (e: Filter) => void,\n  setQuery: (e: string) => void,\n};\n\nexport const TodoFilter = ({\n  filterBy,\n  query,\n  setFilterBy,\n  setQuery,\n}: Props) => {\n  // const [hide, setHide] = useState<boolean>(true);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={(e) => setFilterBy(e.target.value as Filter)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n\n          {query !== ''\n            ? (\n          /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setQuery('')}\n              />\n            ) : null }\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  isLoading: boolean;\n  setIsLoading: (bool: boolean) => void,\n  setIsHide: (bool: boolean) => void,\n  selectedTodo: Todo;\n  setSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  isLoading,\n  setIsHide,\n  setIsLoading,\n  selectedTodo,\n  setSelectedTodo,\n\n}: Props) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    const loadUser = async () => {\n      const oneUser = await getUser(selectedTodo.userId);\n\n      setIsLoading(false);\n      setUser(oneUser);\n    };\n\n    loadUser();\n  }, [selectedTodo]);\n\n  return (\n\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setIsHide(true);\n                setSelectedTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                selectedTodo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Filter, filterTodos } from './components/utils';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [filterBy, setFilterBy] = useState<Filter>('all');\n  const [query, setQuery] = useState<string>('');\n  const [isHide, setIsHide] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      const data = await getTodos();\n\n      setTodos(data);\n      setIsLoading(false);\n    };\n\n    loadTodos();\n  }, []);\n\n  const filteredTodos = filterTodos(todos, filterBy, query);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterBy={filterBy}\n                setFilterBy={setFilterBy}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                isLoading\n                  ? <Loader />\n                  : todos\n                  && (\n                    <TodoList\n                      todos={filteredTodos}\n                      setIsHide={setIsHide}\n                      selectedTodo={selectedTodo as Todo}\n                      setSelectedTodo={setSelectedTodo}\n                      setIsLoading={setIsLoading}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {\n        isHide\n     || (\n       <TodoModal\n         isLoading={isLoading}\n         setIsLoading={setIsLoading}\n         setIsHide={setIsHide}\n         selectedTodo={selectedTodo as Todo}\n         setSelectedTodo={setSelectedTodo}\n       />\n     )\n      }\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nexport type Filter = 'completed' | 'all' | 'active';\n\nexport const filterTodos = (todos: Todo[], filterBy: Filter, query: string) => {\n  const filteredTodos = todos.filter(todo => todo.title.toLowerCase()\n    .includes(query.toLowerCase()));\n\n  switch (filterBy) {\n    case 'completed':\n      return filteredTodos.filter(v => v.completed === true);\n    case 'all':\n      return filteredTodos;\n    case 'active':\n      return filteredTodos.filter(v => v.completed === false);\n    default:\n      return filteredTodos;\n  }\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}